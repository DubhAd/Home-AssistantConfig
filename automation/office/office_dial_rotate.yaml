id: 'office_dial_rotate'
initial_state: 'on'
alias: 'Office dial rotate'
trigger:
  - platform: state
    entity_id: sensor.office_dial_moes_action
    to: brightness_step_up
    id: volume_up
  - platform: state
    entity_id: sensor.office_dial_moes_action
    to: brightness_step_down
    id: volume_down
  - platform: state
    entity_id: sensor.office_dial_moes_action
    to: color_temperature_step_up
    id: next_track
  - platform: state
    entity_id: sensor.office_dial_moes_action
    to: color_temperature_step_down
    id: prev_track
variables:
  current_vol: "{{ state_attr('media_player.office','volume_level')|float(0) }}"
  vol_step: "{{ (trigger.to_state.attributes.action_step_size|float(12)/1000)|round(2) }}"
  new_vol: >-
    {{ (min(1,current_vol|float(0)+vol_step|float(0)))|round(2) if trigger.id == 'volume_up' else (max(0,current_vol|float(0)-vol_step|float(0)))|round(2) }}
action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'volume_up'
      sequence:
      - service: media_player.volume_set
        data:
          entity_id: media_player.office
          volume_level: "{{ min(1,state_attr('media_player.office','volume_level')|float(0)+(trigger.to_state.attributes.action_step_size|float(12)/1000)|round(2)) }}"
    - conditions:
      - condition: trigger
        id: 'volume_down'
      sequence:
      - service: media_player.volume_set
        data:
          entity_id: media_player.office
          volume_level: "{{ max(0,state_attr('media_player.office','volume_level')|float(0)-(trigger.to_state.attributes.action_step_size|float(12)/1000)|round(2)) }}"
    - conditions:
      - condition: trigger
        id: 'next_track'
      sequence:
      - service: media_player.media_next_track
        data:
          entity_id: media_player.office
    - conditions:
      - condition: trigger
        id: 'prev_track'
      sequence:
      - service: media_player.media_previous_track
        data:
          entity_id: media_player.office
