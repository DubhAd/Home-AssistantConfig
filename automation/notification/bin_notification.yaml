id: 'bin_notification'
initial_state: 'on'
alias: 'Bin notification'
trigger:
  - platform: time_pattern
    minutes: '/5'
    seconds: '30'
condition:
  - condition: state
    entity_id: input_boolean.living_room_occupied
    state: 'on'
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity_id: sensor.next_bin_collection
            state: 'tomorrow'
          - condition: template
            value_template: >-
              {{ states.binary_sensor.garden_gate_contact.last_changed < today_at("18:00") }}
      - condition: and
        conditions:
          - condition: time
            before: '09:00:00'
          - condition: state
            entity_id: sensor.next_bin_collection
            state: 'today'
          - condition: template
            value_template: >-
              {{ states.binary_sensor.garden_gate_contact.last_changed < today_at("18:00") - timedelta(days=1) }}
variables:
  not_out: >-
    {{ (is_state('sensor.next_bin_collection','today') and (states.binary_sensor.garden_gate_contact.last_changed < today_at("18:00") - timedelta(days=1))) 
      or (is_state('sensor.next_bin_collection','tomorrow') and (states.binary_sensor.garden_gate_contact.last_changed < today_at("18:00"))) }}
  icon: >-
    {% if is_state_attr('sensor.next_bin_collection','bin_type','grey') %}
      12155
    {% elif is_state_attr('sensor.next_bin_collection','bin_type','green') %}
      12059
    {% elif is_state_attr('sensor.next_bin_collection','bin_type','blue') %}
      12060
    {% elif is_state_attr('sensor.next_bin_collection','bin_type','brown') %}
      12442
    {% endif %}
  message: >-
    {{ states('sensor.next_bin_collection')|title }} the {{ state_attr('sensor.next_bin_collection','bin_type') }} bin is being collected
    {% if not_out %} and it has not been put out yet {% endif %}
action:
  - delay: '00:01:00'
  - repeat:
      for_each:
        - 'living_room'
        - 'family_room'
      sequence:
        - service: 'notify.awtrix_{{ repeat.item }}'
          data:
            message: >-
              {{ message }}
            data:
              icon: "{{ icon }}"
              duration: 30
              repeat: 2
