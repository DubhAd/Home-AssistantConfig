title: Floorplan
id: floor-plan
path: floor-plan
icon: mdi:floor-plan
panel: true
cards:
  - type: custom:floorplan-card
    config:
      image: /local/floorplan/config/home/floorplan.svg
      stylesheet: /local/floorplan/config/home/ha-floorplan.css
      #log_level: info
      #console_log_level: info

      defaults:
        hover_action: hover-info
        tap_action: more-info

      rules:
        - entities: 
            - sensor.bin_blue
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'bin-${entity.state}'
                elements:
                  - sensor.bin_blue_1
                  - sensor.bin_blue_2
                  - sensor.bin_blue_3
                  - sensor.bin_blue_4
                  - sensor.bin_blue_5
        - entities: 
            - sensor.bin_green
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'bin-${entity.state}'
                elements:
                  - sensor.bin_green_1
                  - sensor.bin_green_2
                  - sensor.bin_green_3
                  - sensor.bin_green_4
                  - sensor.bin_green_5
        - entities: 
            - sensor.bin_grey
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'bin-${entity.state}'
                elements:
                  - sensor.bin_grey_1
                  - sensor.bin_grey_2
                  - sensor.bin_grey_3
                  - sensor.bin_grey_4
                  - sensor.bin_grey_5
        - entities: 
            - sensor.bin_brown
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'bin-${entity.state}'
                elements:
                  - sensor.bin_brown_1
                  - sensor.bin_brown_2
                  - sensor.bin_brown_3
                  - sensor.bin_brown_4
                  - sensor.bin_brown_5

        - entities: 
            - input_boolean.person3_in_bed
            - input_boolean.person1_in_bed
            - input_boolean.person2_in_bed
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'in-bed-${entity.state}'

        - entities: 
            - input_boolean.person3_is_awake
            - input_boolean.person1_is_awake
            - input_boolean.person2_is_awake
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'awake-${entity.state}'

        - entities: 
            - input_boolean.living_room_occupied
            - input_boolean.family_room_occupied
            - input_boolean.office_occupied
            - input_boolean.bathroom_occupied
            - input_boolean.garage_occupied
            - input_boolean.guest_bedroom_occupied
            - input_boolean.kitchen_occupied
            - input_boolean.master_bedroom_occupied
            - input_boolean.master_ensuite_occupied
            - input_boolean.second_bedroom_occupied
            - input_boolean.second_ensuite_occupied
            - input_boolean.spare_bedroom_occupied
            - input_boolean.utility_occupied
            - input_boolean.toilet_occupied
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'room-${entity.state}'
            - action: call-service
              service: floorplan.style_set
              service_data: 
                style: |
                  transition: fill 1s ease;

        - entities: 
            - binary_sensor.bathroom_water_leak_water_leak
            - binary_sensor.kitchen_water_leak_water_leak
            - binary_sensor.utility_room_water_leak_water_leak
            - binary_sensor.toilet_water_leak_water_leak
            - binary_sensor.second_ensuite_water_leak
            - binary_sensor.master_ensuite_leak_water_leak
            - binary_sensor.boiler_water_leak
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: |
                >
                  var elements = [
                    `${entity.entity_id}.main`,
                    `${entity.entity_id}.l1`,
                    `${entity.entity_id}.l2`,
                    `${entity.entity_id}.r1`,
                    `${entity.entity_id}.r2`,
                  ];
                  var style = 'leak-'+entity.state;
    
                  return {
                    elements: elements,
                    class: style,
                  };

        - entities:
            - binary_sensor.ps5_status
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'connection-${entity.state}'

        - entities:
            - binary_sensor.sky_q_family_room_transport_status
            - binary_sensor.sky_q_living_room_transport_status
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'device-${entity.state}'

        - entities:
            - input_boolean.car_home
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'car-${entity.state}'

        - entities:
            - input_boolean.person2_home
            - input_boolean.person1_home
            - input_boolean.person3_home
            - input_boolean.guest_mode
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'person-home-${entity.state}'

        - entities:
            - group.work_laptop
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'tracker-${entity.state}'
                elements:
                  - group.work_laptop_main
                  - group.work_laptop_1
                  - group.work_laptop_2
                  - group.work_laptop_3

        - entities:
            - group.person_person2_work
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'tracker-${entity.state}'

        - entities:
            - media_player.roku_x00200y5s7lx
            - media_player.samsung_tv
            - media_player.living_room_tv
            #- device_tracker.living_room_chromecast
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'tv-${entity.state}'

        - entity: media_player.living_room
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'squeezebox-${entity.state}'
                elements:
                  - media_player.living_room_l
                  - media_player.living_room_r

        - entities:
            - media_player.office
            - media_player.family_room
            - media_player.person2
            - media_player.person1
            - media_player.sky_q_living_room
            - media_player.sky_q_family_room
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'squeezebox-${entity.state}'

        - entities:
            - switch.ps5_724_power
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'console-${entity.state}'

        - entities:
            - media_player.living_room_display
            - media_player.family_room_display
            - media_player.office_smart_display
            - media_player.master_bedroom_display
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'homehub-${entity.state}'

        - entities:
            - media_player.cast_master_bedroom_speaker
            - media_player.cast_second_bedroom_speaker
            - media_player.cast_kitchen_speaker
            - media_player.cast_master_bedroom_display
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'squeezebox-${entity.state}'

        - entities:
            - binary_sensor.samsung_m283x_series_connected
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'device-${entity.state}'

        - entities:
            - binary_sensor.samsung_m283x_series_health
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'alert-${entity.state}'

        - entities:
            - sensor.samsung_m283x_series_active_alerts
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: |
                  >
                  var health = parseFloat(entity.state.replace("%", ""));
                  if (health < 1)
                    return "status-good";
                  else if (health < 2)
                    return "status-warning";
                  else
                    return "status-critical";

        - entities:
            - sensor.samsung_m283x_series_toner_black
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: |
                  >
                  var health = parseFloat(entity.state.replace("%", ""));
                  if (health < 10)
                    return "health-critical";
                  else if (health < 25)
                    return "health-warning";
                  else if (health < 50)
                    return "health-info";
                  else if (health >= 50)
                    return "health-good";
                  else
                    return "health-unknown";

        - entities:
            - sensor.samsung_m283x_series_drum_black
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: |
                  >
                  var health = parseFloat(entity.state.replace("%", ""));
                  if (health < 10)
                    return "health-critical";
                  else if (health < 25)
                    return "health-warning";
                  else if (health < 50)
                    return "health-info";
                  else if (health >= 50)
                    return "health-good";
                  else
                    return "health-unknown";

        - entities:
            - sensor.printer
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data:
                class: |
                  >
                  var health = entity.state;
                  if (health < 50)
                    return "health-critical";
                  else if (health < 100)
                    return "health-warning";
                  else if (health < 250)
                    return "health-info";
                  else if (health >= 25)
                    return "health-good";
                  else
                    return "health-unknown";

        # Indoors should be moderate
        - entities:
            - sensor.bathroom_environment_temperature
            - sensor.master_ensuite_temperature
            - sensor.living_room_climate_temperature
            - sensor.family_room_multi_temperature
            - sensor.office_temperature
            - sensor.second_bedroom_ensuite_temperature
            - sensor.spare_bedroom_environment_temperature
          state_action:
            - action: call-service
              service: floorplan.text_set
              service_data:
                text: '${entity.state ? Math.round(entity.state * 2)/2 : "unknown"}°C'
            - action: call-service
              service: floorplan.class_set
              service_data: |
                >
                  var elements = [
                    `${entity.entity_id}.icon`,
                  ];
    
                  var temp = parseFloat(entity.state.replace("°", ""));
                  if (temp < 5)
                    style = "temp-freeze";
                  else if (temp < 10)
                    style = "temp-low";
                  else if (temp < 21)
                    style = "temp-medium";
                  else if (temp < 24)
                    style = "temp-medium-high";
                  else if (temp >= 24)
                    style = "temp-high";
                  else
                    style = "temp-unknown";

                  return {
                    elements: elements,
                    class: style,
                  };

        - entities:
            #- sensor.openweathermap_temperature
            - sensor.outside_temperature
          state_action:
            - action: call-service
              service: floorplan.text_set
              service_data:
                text: '${entity.state ? Math.round(entity.state * 2)/2 : "unknown"}°C'
            - action: call-service
              service: floorplan.class_set
              service_data: 
                elements:
                  - sensor.outside_temperature.icon
                class: |
                  >
                  var temp = parseFloat(entity.state.replace("°", ""));
                  if (temp < 0)
                    return "temp-subzero";
                  else if (temp < 5)
                    return "temp-freeze";
                  else if (temp < 10)
                    return "temp-low";
                  else if (temp < 21)
                    return "temp-medium";
                  else if (temp < 24)
                    return "temp-medium-high";
                  else if (temp >= 24)
                    return "temp-high";
                  else
                    return "temp-unknown";

        # Bathrooms are expected to be a bit more humid
        - entities:
            - sensor.bathroom_environment_humidity
            - sensor.master_ensuite_humidity
            - sensor.office_humidity
            - sensor.second_bedroom_ensuite_humidity
            - sensor.outside_humidity
          state_action:
            - action: call-service
              service: floorplan.text_set
              service_data:
                text: '${entity.state ? entity.state : "unknown"}%'
            - action: call-service
              service: floorplan.class_set
              service_data: |
                >
                  var elements = [
                    `${entity.entity_id}.icon`,
                  ];
    
                  var humid = parseFloat(entity.state.replace("%", ""));
                  if (humid < 30)
                    style = "humid-low";
                  else if (humid < 45)
                    style = "humid-med-low";
                  else if (humid < 60)
                    style = "humid-medium";
                  else if (humid < 70)
                    style = "humid-med-high";
                  else
                    style = "humid-high";

                  return {
                    elements: elements,
                    class: style,
                  };

        - entities:
            - sensor.downstairs_hall_light_sensor_illuminance_lux
            - sensor.living_room_light_sensor_illuminance_lux
            - sensor.master_bedroom_light_sensor_illuminance_lux
            - sensor.family_room_multi_illuminance_lux
            - sensor.office_illuminance_illuminance_lux
            - sensor.second_bedroom_motion_illuminance_lux
            - sensor.guest_bedroom_motion_illuminance_lux
          state_action:
            - action: call-service
              service: floorplan.text_set
              service_data:
                text: '${entity.state ? entity.state : "unknown"} lux'

        - entities:
            - input_text.person_person3
            - input_text.person_person1
            - input_text.person_person2
          state_action:
            - action: call-service
              service: floorplan.text_set
              service_data:
                text: '${entity.state ? entity.state : "unknown"}'

        - entities:
            - switch.number_sign
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'switch-${entity.state}'
                elements:
                  - switch.number_sign_3
                  - switch.number_sign_9

        - entities:
            - switch.living_room_cabinet_light
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data:
                class: 'light-${entity.state}'
            - action: call-service
              service: floorplan.style_set
              service_data: 
                elements:
                  - switch.living_room_cabinet_light
                  - switch.living_room_cabinet_light.gradient
                style: |
                  transition: fill 2s ease;

        - entities:
            - light.living_room_tv_lamp
            - light.living_room_table_lamp
            - light.living_room_corner_lamp
            - light.downstairs_hall
          state_action:
            - action: call-service
              service: floorplan.style_set
              service_data: |
                >
                  var elements = [
                    `${entity.entity_id}`,
                    `${entity.entity_id}.gradient_color_0`,
                  ];
    
                  var color = 'rgb(77, 77, 62)';
                  var opacity = 0;
    
                  if (entity.state === 'on') {
                    if (entity.attributes.color_temp) {
                      var rgb = util.color.miredToRGB(entity.attributes.color_temp);
                      color = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;
                      opacity = 1;
                    }
                    else if (entity.attributes.rgb_color) {
                      var rgb = entity.attributes.rgb_color;
                      color = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;
                      opacity = 1;
                    }
                  }
                  var style = `fill: ${color}; stop-color: ${color}; stop-opacity: ${opacity}; transition: fill 2s ease;`;
    
                  return {
                    elements: elements,
                    style: style,
                  };
 
        - entities:
            - light.master_bedroom_bedhead
            - light.person1_bedroom_bedside
            - light.office_strip
          state_action:
            - action: call-service
              service: floorplan.style_set
              service_data: |
                >
                  var elements = [
                    `${entity.entity_id}`,
                    `${entity.entity_id}.gradient_color_0`,
                  ];
    
                  var color = 'rgb(77, 77, 62)';
                  var opacity = 0;
                  var stroke = '1px';
    
                  if (entity.state === 'on') {
                    if (entity.attributes.color_temp) {
                      var rgb = util.color.miredToRGB(entity.attributes.color_temp);
                      color = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;
                      opacity = 1;
                      stroke = '10px';
                    }
                    else if (entity.attributes.rgb_color) {
                      var rgb = entity.attributes.rgb_color;
                      color = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;
                      opacity = 1;
                      stroke = '10px';
                    }
                  }
                  var style = `fill: ${color}; stop-color: ${color}; stop-opacity: ${opacity}; stroke-width: ${stroke}; stroke: ${color}; stroke-opacity: 0.25; transition: fill 2s ease;`;
    
                  return {
                    elements: elements,
                    style: style,
                  };

        - entities:
            - switch.garden_lights
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'light-strip-${entity.state}'
                elements:
                  - switch.garden_lights.1
                  - switch.garden_lights.2
                  - switch.garden_lights.3
            - action: call-service
              service: floorplan.style_set
              service_data: 
                style: |
                  transition: fill 2s ease;

        - entities:
            - switch.living_room_christmas_tree
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'switch-${entity.state}'
                elements:
                  - switch.living_room_christmas_tree.star
                  - switch.living_room_christmas_tree.main
                  - switch.living_room_christmas_tree.1
                  - switch.living_room_christmas_tree.2
                  - switch.living_room_christmas_tree.3
            - action: call-service
              service: floorplan.style_set
              service_data: 
                style: |
                  transition: fill 2s ease;

        - entities:
            - switch.vestibule_socket
            - switch.family_room_socket
            - light.toilet
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'switch-${entity.state}'

        - entities:
            - switch.master_bedroom
            - switch.spare_bedroom_socket
            - switch.guest_bedroom_socket
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'socket-${entity.state}'

        - entities:
            - binary_sensor.fritz_box_3490_connection
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'connection-${entity.state}'
                elements:
                  - binary_sensor.fritz_box_3490_connection
                  - binary_sensor.fritz_box_3490_connection_1
                  - binary_sensor.fritz_box_3490_connection_2

        - entities:
            - binary_sensor.office_mmwave_presence
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'presence-${entity.state}'
                elements:
                  - binary_sensor.office_mmwave_presence_head
                  - binary_sensor.office_mmwave_presence_body
                  - binary_sensor.office_mmwave_presence_leg

        - entities:
            - binary_sensor.downstairs_hall_motion_occupancy
            - binary_sensor.family_room_multi_occupancy
            - binary_sensor.living_room_presence_occupancy
            - binary_sensor.master_bedroom_motion_occupancy
            - binary_sensor.office_presence_occupancy
            - binary_sensor.second_bedroom_motion_occupancy
            - binary_sensor.guest_bedroom_motion_occupancy
            - binary_sensor.upstairs_hall_motion_front_occupancy
            - binary_sensor.utility_motion_occupancy
            - binary_sensor.vestibule_multi_occupancy
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'motion-${entity.state}'
            - action: call-service
              service: floorplan.style_set
              service_data: 
                style: |
                  transition: ${ entity.state === "off" ? "fill 2s ease" : "" };

        - entities:
            - binary_sensor.loft_hatch_contact
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'utility-door-${entity.state}'

        - element: binary_sensor.living_room_door_contact.sweep
          entity: binary_sensor.living_room_door_contact
          state_action:
            - action: call-service
              service: floorplan.class_set
              state: binary_sensor.living_room_door_contact
              element: binary_sensor.living_room_door_contact.sweep
              service_data: 
                class: 'alert-on'

        - entities:
            - binary_sensor.bathroom_door_contact
            - binary_sensor.family_room_door_contact
            - binary_sensor.guest_bedroom_door_contact
            - binary_sensor.living_room_door_contact
            - binary_sensor.master_bedroom_door_contact
            - binary_sensor.master_ensuite_door_contact
            - binary_sensor.office_door_contact
            - binary_sensor.second_bedroom_door_contact
            - binary_sensor.second_ensuite_door_contact
            - binary_sensor.toilet_door_contact
            - binary_sensor.vestibule_door_contact
            - binary_sensor.spare_bedroom_door_contact
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'interior-door-${entity.state}'

        - entities:
            - binary_sensor.front_door_contact
            - binary_sensor.patio_door_left_contact
            - binary_sensor.patio_door_right_contact
            - binary_sensor.utility_door_exterior_contact
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'exterior-door-${entity.state}'

        - entities:
            - binary_sensor.patio_window_left_contact
            - binary_sensor.patio_window_right_contact
            - binary_sensor.master_window_ensuite_contact
            - binary_sensor.vestibule_window_front_contact
            - binary_sensor.vestibule_window_side_contact
            - binary_sensor.family_window_right_contact
            - binary_sensor.family_window_left_contact
            - binary_sensor.guest_bedroom_window_left_contact
            - binary_sensor.guest_bedroom_window_right_contact
            - binary_sensor.kitchen_window_right_contact
            - binary_sensor.kitchen_window_left_contact
            - binary_sensor.bathroom_window_contact
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'downstairs-window-${entity.state}'

        - entities:
            - binary_sensor.master_window_left_contact
            - binary_sensor.master_window_right_contact
            - binary_sensor.office_window_contact
            - binary_sensor.spare_bedroom_window_left_contact
            - binary_sensor.spare_bedroom_window_right_contact
            - binary_sensor.second_bedroom_window_ensuite_contact
            - binary_sensor.second_bedroom_window_left_contact
            - binary_sensor.second_bedroom_window_right_contact
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'upstairs-window-${entity.state}'

        - entities:
            - binary_sensor.chest_bike_lid_contact
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'appliance-${entity.state}'

        - entities:
            - binary_sensor.garage_door_bike_contact
            - binary_sensor.garage_door_car_contact
            - binary_sensor.garden_gate_contact
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'exterior-${entity.state}'

        - entities:
            - alarm_control_panel.master
          state_action:
            - action: call-service
              service: floorplan.class_set
              service_data: 
                class: 'alarm-${entity.state}'
