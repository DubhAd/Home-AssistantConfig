alias: Weather notification AccuWeather
variables:
  weather_icon: >-
    {% set weather_cond_day = ({
    "clear-night":"13345",
    "cloudy":"52159",
    "fog":"676",
    "hail":"53288",
    "lightning":"56676",
    "lightning-rainy":"56675",
    "partlycloudy":"2286",
    "pouring":"49300",
    "rainy":"2284",
    "snowy":"2289",
    "snowy-rainy":"49301",
    "sunny":"11201",
    "windy":"55032",
    "windy-variant":"56598",
    "exceptional":"16754"
    }) %}
    {% set weather_cond_night = ({
    "clear-night":"13345",
    "cloudy":"55707",
    "fog":"43741",
    "hail":"53288",
    "lightning":"56676",
    "lightning-rainy":"56675",
    "partlycloudy":"58532",
    "pouring":"26092",
    "rainy":"26092",
    "snowy":"26090",
    "snowy-rainy":"49301",
    "sunny":"18433",
    "windy":"56585",
    "windy-variant":"56585",
    "exceptional":"16754"
    }) %}
    {{ weather_cond_night[states('weather.accuhome')] if is_state('sun.sun','below_horizon') else weather_cond_day[states('weather.accuhome')] }}
sequence:
  - service: weather.get_forecasts
    data:
      type: daily
    target:
      entity_id: weather.accuhome
    response_variable: daily
  - variables:
      temp_low: "{{ daily['weather.accuhome'].forecast|selectattr('templow')|map(attribute='templow')|min()|default(0)|round(0) }} {{ state_attr('weather.accuhome','temperature_unit') }}"
      temp_high: "{{ daily['weather.accuhome'].forecast|selectattr('temperature')|map(attribute='temperature')|max()|default(0)|round(0) }} {{ state_attr('weather.accuhome','temperature_unit') }}"
  - if:
      - condition: state
        entity_id: input_boolean.living_room_occupied
        state: 'on'
    then:
      - service: notify.awtrix_living_room
        data:
          message: >-
            {% if states('sensor.accuhome_realfeel_temperature') != 'unknown' %}
              It is currently {{ states('sensor.accuhome_apparent_temperature',with_unit=True) }}, feeling like {{ states('sensor.accuhome_realfeel_temperature',rounded=True,with_unit=True) }}, and {{ states('weather.accuhome') }}. T{{ "oday will be " + states('sensor.accuhome_condition_today')|lower + ", and t" if is_state('sun.sun','above_horizon') }}onight will be {{ states('sensor.accuhome_condition_tonight')|lower }}. Highs will feel like {{ states('sensor.accuhome_realfeel_temperature_max_today',with_unit=True) }} and lows like {{ states('sensor.accuhome_realfeel_temperature_min_today',with_unit=True) }}. Tomorrow will be {{ states('sensor.accuhome_condition_day_1')|lower }}, and tomorrow night will be {{ states('sensor.accuhome_condition_night_1')|lower }}, highs feeling like {{ states('sensor.accuhome_realfeel_temperature_max_day_1',with_unit=True) }} and lows like {{ states('sensor.accuhome_realfeel_temperature_min_day_1',with_unit=True) }}. Highs this week of {{ temp_high }} and lows of {{ temp_low }}.
            {% else %}
              I have no idea what the weather is like, try looking out the window.
            {% endif %}
          data:
            icon: "{{ weather_icon }}"
            duration: 40
            repeat: 2
            pushIcon: 1
  - if:
      - condition: state
        entity_id: input_boolean.family_room_occupied
        state: 'on'
    then:
      - service: notify.awtrix_family_room
        data:
          message: >-
            {% if states('sensor.accuhome_realfeel_temperature') != 'unknown' %}
              It is currently {{ states('sensor.accuhome_apparent_temperature',with_unit=True) }}, feeling like {{ states('sensor.accuhome_realfeel_temperature',rounded=True,with_unit=True) }}, and {{ states('weather.accuhome') }}. T{{ "oday will be " + states('sensor.accuhome_condition_today')|lower + ", and t" if is_state('sun.sun','above_horizon') }}onight will be {{ states('sensor.accuhome_condition_tonight')|lower }}. Highs will feel like {{ states('sensor.accuhome_realfeel_temperature_max_today',with_unit=True) }} and lows like {{ states('sensor.accuhome_realfeel_temperature_min_today',with_unit=True) }}. Tomorrow will be {{ states('sensor.accuhome_condition_day_1')|lower }}, and tomorrow night will be {{ states('sensor.accuhome_condition_night_1')|lower }}, highs feeling like {{ states('sensor.accuhome_realfeel_temperature_max_day_1',with_unit=True) }} and lows like {{ states('sensor.accuhome_realfeel_temperature_min_day_1',with_unit=True) }}. Highs this week of {{ temp_high }} and lows of {{ temp_low }}.
            {% else %}
              I have no idea what the weather is like, try looking out the window.
            {% endif %}
          data:
            icon: "{{ weather_icon }}"
            duration: 40
            repeat: 2
            pushIcon: 1
  - if:
      - condition: state
        entity_id: 
          - input_boolean.office_occupied
          - input_boolean.notify_office_weather
        state: 'on'
    then:
      - service: notify.awtrix_6d6f50
        data:
          message: >-
            {% if states('sensor.accuhome_realfeel_temperature') != 'unknown' %}
              It is currently {{ states('sensor.accuhome_apparent_temperature',with_unit=True) }}, feeling like {{ states('sensor.accuhome_realfeel_temperature',rounded=True,with_unit=True) }}, and {{ states('weather.accuhome') }}. T{{ "oday will be " + states('sensor.accuhome_condition_today')|lower + ", and t" if is_state('sun.sun','above_horizon') }}onight will be {{ states('sensor.accuhome_condition_tonight')|lower }}. Highs will feel like {{ states('sensor.accuhome_realfeel_temperature_max_today',with_unit=True) }} and lows like {{ states('sensor.accuhome_realfeel_temperature_min_today',with_unit=True) }}. Tomorrow will be {{ states('sensor.accuhome_condition_day_1')|lower }}, and tomorrow night will be {{ states('sensor.accuhome_condition_night_1')|lower }}, highs feeling like {{ states('sensor.accuhome_realfeel_temperature_max_day_1',with_unit=True) }} and lows like {{ states('sensor.accuhome_realfeel_temperature_min_day_1',with_unit=True) }}. Highs this week of {{ temp_high }} and lows of {{ temp_low }}.
            {% else %}
              I have no idea what the weather is like, try looking out the window.
            {% endif %}
          data:
            icon: "{{ weather_icon }}"
            duration: 30
            repeat: 2
            pushIcon: 1
